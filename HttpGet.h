//
// File: HttpGet.h
//
// Copyright (c) 2009, 2010  University of Toronto and Steve Harvey
//

#ifndef HTTPGET_H
#define HTTPGET_H

#include <QtNetwork>
#include <QUrl>
#include <QIODevice>

/** Subclass of QHttp used to GET items from the server.
  * \sa TrHttp
  */
class HttpGet : public QHttp {
	Q_OBJECT

public:
	//! constructor
	//! \param url is the URL to GET from
	//! \param to is the I/O device (perhaps a buffer) to store the result
	HttpGet(const QUrl &url, QIODevice *to);

	//! set if the file has been fetched. \todo { remove as it is not used }
	bool gotten;

	//! destructor
	virtual ~HttpGet() {}

public slots:

	//! slot receiving transfer initiation message
	//! \param id is a request id assigned by QHttp::request()
	void started(int id);

	//! slot receiving request finished message
	//! \param id is a request id assigned by QHttp::request()
	//! \param error is set if there was an error in processing
	void finished(int id, bool error);

//not used...
//signals:
//	//! signal
//	void updateContents(const QString &text);

private:
	int requestID;		//!< request id generated by the QHttp::get method
	bool status;		//!< not used
	QEventLoop loop;	//!< event loop to maintain GUI responsiveness
	QIODevice *f;		//!< I/O device (i.e. a buffer) to store the result
};

#endif
